# Generated by Django 5.2.4 on 2025-08-16 17:02

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("staff", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ScheduleTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name for this schedule template (e.g., 'Summer Weekly', 'Holiday Rush')",
                        max_length=100,
                    ),
                ),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("weekly", "Weekly Template"),
                            ("seasonal", "Seasonal Template"),
                            ("holiday", "Holiday Template"),
                            ("special", "Special Event"),
                        ],
                        default="weekly",
                        help_text="Type of schedule template",
                        max_length=15,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of when to use this template"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this template is currently available for use",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="Who created this template",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Schedule Template",
                "verbose_name_plural": "Schedule Templates",
                "ordering": ["template_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="ScheduleTemplateItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weekday",
                    models.IntegerField(
                        choices=[
                            (0, "Monday"),
                            (1, "Tuesday"),
                            (2, "Wednesday"),
                            (3, "Thursday"),
                            (4, "Friday"),
                            (5, "Saturday"),
                            (6, "Sunday"),
                        ],
                        help_text="Day of the week for this shift",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("owner", "Owner"),
                            ("manager", "Manager"),
                            ("shift_lead", "Shift Lead"),
                            ("barista", "Barista"),
                            ("cashier", "Cashier"),
                            ("kitchen", "Kitchen Staff"),
                            ("part_time", "Part-time"),
                            ("intern", "Intern"),
                        ],
                        help_text="Required role for this shift",
                        max_length=20,
                    ),
                ),
                (
                    "shift_type",
                    models.CharField(
                        choices=[
                            ("opening", "Opening Shift"),
                            ("mid", "Mid Shift"),
                            ("closing", "Closing Shift"),
                            ("full", "Full Day"),
                            ("split", "Split Shift"),
                        ],
                        default="mid",
                        help_text="Type of shift",
                        max_length=10,
                    ),
                ),
                ("start_time", models.TimeField(help_text="Shift start time")),
                ("end_time", models.TimeField(help_text="Shift end time")),
                (
                    "break_duration",
                    models.PositiveIntegerField(
                        default=30,
                        help_text="Break duration in minutes",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(120),
                        ],
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Notes about this shift (e.g., 'Needs experienced barista')",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        help_text="The template this shift belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="template_items",
                        to="staff.scheduletemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Template Shift",
                "verbose_name_plural": "Template Shifts",
                "ordering": ["weekday", "start_time"],
            },
        ),
        migrations.CreateModel(
            name="ShiftSwapRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved_by_receiver", "Approved by Receiver"),
                            ("approved_by_manager", "Approved by Manager"),
                            ("completed", "Completed"),
                            ("denied", "Denied"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        help_text="Current status of the swap request",
                        max_length=20,
                    ),
                ),
                (
                    "reason",
                    models.TextField(help_text="Reason for requesting the swap"),
                ),
                (
                    "manager_notes",
                    models.TextField(
                        blank=True,
                        help_text="Notes from manager about this swap request",
                    ),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, help_text="When the swap was approved", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Manager who approved this swap",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_swaps",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "original_shift",
                    models.ForeignKey(
                        help_text="The shift that the requester wants to give away",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="swap_requests_original",
                        to="staff.schedule",
                    ),
                ),
                (
                    "receiver",
                    models.ForeignKey(
                        help_text="Employee being asked to take the shift",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="swap_requests_received",
                        to="staff.employee",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        help_text="Employee requesting the swap",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="swap_requests_made",
                        to="staff.employee",
                    ),
                ),
                (
                    "return_shift",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optional: shift that receiver gives in return",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="swap_requests_return",
                        to="staff.schedule",
                    ),
                ),
            ],
            options={
                "verbose_name": "Shift Swap Request",
                "verbose_name_plural": "Shift Swap Requests",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="EmployeeAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weekday",
                    models.IntegerField(
                        choices=[
                            (0, "Monday"),
                            (1, "Tuesday"),
                            (2, "Wednesday"),
                            (3, "Thursday"),
                            (4, "Friday"),
                            (5, "Saturday"),
                            (6, "Sunday"),
                        ],
                        help_text="Day of the week (0=Monday, 6=Sunday)",
                    ),
                ),
                (
                    "availability_type",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("preferred", "Preferred"),
                            ("unavailable", "Unavailable"),
                            ("limited", "Limited Availability"),
                        ],
                        default="available",
                        help_text="Type of availability for this day",
                        max_length=15,
                    ),
                ),
                (
                    "start_time",
                    models.TimeField(
                        blank=True,
                        help_text="Earliest time employee can start (leave blank if unavailable)",
                        null=True,
                    ),
                ),
                (
                    "end_time",
                    models.TimeField(
                        blank=True,
                        help_text="Latest time employee can work until (leave blank if unavailable)",
                        null=True,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes about availability (e.g., 'School pickup at 3pm')",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this availability preference is currently active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "employee",
                    models.ForeignKey(
                        help_text="Employee this availability applies to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availability_preferences",
                        to="staff.employee",
                    ),
                ),
            ],
            options={
                "verbose_name": "Employee Availability",
                "verbose_name_plural": "Employee Availability",
                "ordering": ["employee", "weekday"],
                "unique_together": {("employee", "weekday")},
            },
        ),
    ]
