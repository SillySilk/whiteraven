# Generated by Django 5.2.4 on 2025-08-03 00:36

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Category name (e.g., 'Coffee', 'Food', 'Desserts')",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Optional description of this category"
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Display order on menu (lower numbers appear first)",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="Uncheck to hide this category from the public menu",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        help_text="URL-friendly version of the name (auto-generated)",
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="MenuItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(help_text="Menu item name", max_length=100)),
                (
                    "description",
                    models.TextField(
                        help_text="Description of the item, ingredients, etc."
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price in dollars (e.g., 4.95)",
                        max_digits=6,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "available",
                    models.BooleanField(
                        default=True,
                        help_text="Uncheck to hide this item from the public menu",
                    ),
                ),
                (
                    "featured",
                    models.BooleanField(
                        default=False,
                        help_text="Check to feature this item on the homepage",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Optional image of the menu item",
                        upload_to="menu/",
                    ),
                ),
                (
                    "temperature",
                    models.CharField(
                        choices=[
                            ("hot", "Hot"),
                            ("cold", "Cold"),
                            ("both", "Hot & Cold"),
                            ("room", "Room Temperature"),
                        ],
                        default="both",
                        help_text="Temperature options for this item",
                        max_length=10,
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        choices=[
                            ("small", "Small"),
                            ("medium", "Medium"),
                            ("large", "Large"),
                            ("xl", "Extra Large"),
                            ("one_size", "One Size"),
                        ],
                        default="one_size",
                        help_text="Size options for this item",
                        max_length=10,
                    ),
                ),
                (
                    "calories",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Calories per serving (optional)",
                        null=True,
                    ),
                ),
                (
                    "contains_caffeine",
                    models.BooleanField(
                        default=False, help_text="Check if this item contains caffeine"
                    ),
                ),
                (
                    "dietary_notes",
                    models.CharField(
                        blank=True,
                        help_text="Dietary information (e.g., 'Vegan', 'Gluten-Free', 'Contains Nuts')",
                        max_length=200,
                    ),
                ),
                (
                    "preparation_time",
                    models.PositiveIntegerField(
                        default=5,
                        help_text="Estimated preparation time in minutes",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(60),
                        ],
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        help_text="URL-friendly version of the name (auto-generated)",
                        max_length=100,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        help_text="Which category this item belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="menu.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Menu Item",
                "verbose_name_plural": "Menu Items",
                "ordering": ["category__order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ingredients",
                    models.TextField(
                        help_text="List of ingredients with quantities (one per line)"
                    ),
                ),
                (
                    "instructions",
                    models.TextField(help_text="Step-by-step preparation instructions"),
                ),
                (
                    "prep_time",
                    models.PositiveIntegerField(
                        help_text="Preparation time in minutes"
                    ),
                ),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("medium", "Medium"),
                            ("hard", "Hard"),
                        ],
                        default="easy",
                        help_text="Difficulty level for staff",
                        max_length=10,
                    ),
                ),
                (
                    "equipment_needed",
                    models.TextField(
                        blank=True,
                        help_text="Special equipment or tools needed (optional)",
                    ),
                ),
                (
                    "yield_quantity",
                    models.CharField(
                        default="1 serving",
                        help_text="How much this recipe makes (e.g., '1 serving', '2 cups')",
                        max_length=50,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes, tips, or variations"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "menu_item",
                    models.OneToOneField(
                        help_text="The menu item this recipe is for",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="menu.menuitem",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recipe",
                "verbose_name_plural": "Recipes",
            },
        ),
    ]
